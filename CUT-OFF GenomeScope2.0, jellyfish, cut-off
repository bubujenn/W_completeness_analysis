http://genomescope.org/?

$ jellyfish count -C -m 21 -s 1000000000 -t 10 *.fastq -o reads.jf
$ jellyfish histo -t 10 reads.jf > reads.histo


Best.k - The best k-mer size (best.k) was always selected based on the characteristics of the given genome.
Read length - The average read length was calculated by dividing the total number of bases by the total number of reads, as provided in the SRA metadata.

#!/bin/bash
#PBS -N jellyfish_cutoff
#PBS -l select=1:ncpus=8:mem=64gb:scratch_local=300gb
#PBS -l walltime=12:00:00
#PBS -j oe

# clean scratch space on exit
trap 'clean_scratch' TERM EXIT

# set paths and variables
Path=${PWD}  
Base="jellyfish_cutoff"  
TimeStamp=$(date +"%Y%m%d.%H%M")  
Outdir="${Path}/${Base}_${TimeStamp}"  
SCRATCHDIR=${SCRATCHDIR:-"/scratch"}  

# create output directory
mkdir -p "$Outdir"

# input histogram file (always reads.histo)
HISTO_FILE="${1:-reads.histo}"

# copy input file to scratch
cp "$Path/$HISTO_FILE" "$SCRATCHDIR/" || exit 1
cd "$SCRATCHDIR" || exit 2

# identify cutoff value 
CUTOFF=$(awk '
NR == 1 {prev_count = $2; prev_freq = $1; next}
{
    if ($2 > prev_count) {
        print prev_freq;
        exit;
    }
    prev_count = $2;
    prev_freq = $1;
}' "$HISTO_FILE")

# output the determined cutoff value
echo "Determined cutoff value: $CUTOFF"

# check if the cutoff value was found
if [[ -z "$CUTOFF" ]]; then
    echo "Error: No cutoff value found!"
    exit 3
fi

# save the cutoff value to a text file
echo "$CUTOFF" > "cutoff_value.txt"

# move results back to output directory
cp "cutoff_value.txt" "$Outdir/" || exit 4

# final message
echo "Done! The determined cutoff value has been saved in: $Outdir/cutoff_value.txt"
